using System;
using System.IO;
using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Jobs;
using Stringier.Streams;

namespace Benchmarks {
	[SimpleJob(RuntimeMoniker.NetCoreApp31)]
	[SimpleJob(RuntimeMoniker.CoreRt31)]
	[MemoryDiagnoser]
	public class ReadChar_UTF8_Memory_Benchmarks {
		[Params(new Byte[] { 0xEF, 0xBB, 0xBF, 0x54, 0x68, 0x65, 0x20, 0x71, 0x75, 0x69, 0x63, 0x6B, 0x20, 0x62, 0x72, 0x6F, 0x77, 0x6E, 0x20, 0x66, 0x6F, 0x78, 0x20, 0x6A, 0x75, 0x6D, 0x70, 0x73, 0x20, 0x6F, 0x76, 0x65, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6C, 0x61, 0x7A, 0x79, 0x20, 0x64, 0x6F, 0x67 }, new Byte[] { 0xEF, 0xBB, 0xBF, 0xD2, 0x90, 0xD2, 0xA2, 0xD0, 0x84, 0x20, 0x51, 0xD0, 0x8F, 0xD0, 0x87, 0xD2, 0xAA, 0xD4, 0x9E, 0x20, 0xD0, 0xAC, 0xD0, 0xAF, 0xD0, 0xA4, 0xD0, 0xA9, 0xD0, 0x99, 0x20, 0xD3, 0xBA, 0xD0, 0xA4, 0xD3, 0xBE, 0x20, 0x4A, 0xD0, 0x8F, 0xD4, 0xA0, 0x50, 0x53, 0x20, 0xD0, 0xA4, 0x56, 0xD0, 0x84, 0xD0, 0xAF, 0x20, 0xD2, 0xAC, 0xD0, 0x8A, 0xD0, 0xAD, 0x20, 0x4C, 0xD0, 0x94, 0x5A, 0xD2, 0xB0, 0x20, 0x44, 0xD0, 0xA4, 0x47 }, new Byte[] { 0xEF, 0xBB, 0xBF, 0x20, 0xD9, 0xBB, 0x20, 0xD0, 0x8A, 0x20, 0xD1, 0x92, 0x20, 0xCF, 0xB5, 0x20, 0xD5, 0xB0, 0x20, 0xD3, 0xA1, 0x20, 0xD7, 0x98, 0x20, 0xD1, 0xB5, 0x20, 0xD8, 0x87, 0x20, 0xD3, 0x8B, 0x20, 0xD2, 0xAA, 0x20, 0xCF, 0xB9, 0x20, 0xD2, 0x95, 0x20, 0xD9, 0x91, 0x20, 0xD4, 0xA5, 0x20, 0xD7, 0x87, 0x20, 0xCF, 0x93, 0x20, 0xD7, 0x90, 0x20, 0xCF, 0xBE, 0x20, 0xD7, 0x94, 0x20, 0xD8, 0xB8, 0x20, 0xD6, 0x95, 0x20, 0xD7, 0xA6, 0x20, 0xCF, 0xA9, 0x20, 0xD0, 0x83, 0x20, 0xD7, 0xB3, 0x20, 0xD8, 0x85, 0x20, 0xD4, 0xB7, 0x20, 0xD7, 0xAA, 0x20, 0xD0, 0xB3, 0x20, 0xD2, 0x9C, 0x20, 0xCF, 0xB1, 0x20, 0xD8, 0x84, 0x20, 0xD7, 0xA9, 0x20, 0xD9, 0xB5, 0x20, 0xD4, 0x9D, 0x20, 0xD5, 0x90, 0x20, 0xD4, 0x8D, 0x20, 0xD1, 0xBA, 0x20, 0xD8, 0x8C, 0x20, 0xD9, 0x82, 0x20, 0xD8, 0x9D, 0x20, 0xD2, 0xAB, 0x20, 0xD3, 0xAC, 0x20, 0xCF, 0x8D, 0x20, 0xD2, 0xB6, 0x20, 0xD3, 0xB9, 0x20, 0xD0, 0xA1, 0x20, 0xD8, 0x87, 0x20, 0xD0, 0xA0, 0x20, 0xD1, 0x88, 0x20, 0xD6, 0xAA, 0x20, 0xD8, 0x85, 0x20, 0xD9, 0x9F, 0x20, 0xCF, 0xAA, 0x20, 0xD6, 0xB8, 0x20, 0xD1, 0x82, 0x20, 0xD8, 0x86, 0x20, 0xD9, 0xB6, 0x20, 0xCF, 0xAB, 0x20, 0xD3, 0xA7, 0x20, 0xD9, 0xBD, 0x20, 0xD0, 0x8F, 0x20, 0xD0, 0x91, 0x20, 0xD0, 0x9B, 0x20, 0xD8, 0x98, 0x20, 0xD7, 0xB1, 0x20, 0xCF, 0x85, 0x20, 0xD3, 0x96, 0x20, 0xD3, 0x94, 0x20, 0xD8, 0x91, 0x20, 0xD3, 0x88, 0x20, 0xD6, 0xAC, 0x20, 0xD1, 0xBA, 0x20, 0xCF, 0xB4, 0x20, 0xD7, 0x9A, 0x20, 0xD7, 0xA2, 0x20, 0xD0, 0x96, 0x20, 0xD2, 0xBE, 0x20, 0xD8, 0x86, 0x20, 0xD4, 0xA7, 0x20, 0xD2, 0xA0, 0x20, 0xD4, 0xBA, 0x20, 0xD8, 0x84, 0x20, 0xD9, 0xBC, 0x20, 0xD4, 0x88, 0x20, 0xCF, 0xBE, 0x20, 0xD4, 0x91, 0x20, 0xD2, 0xA9, 0x20, 0xD8, 0xA3, 0x20, 0xD4, 0x8B, 0x20, 0xD4, 0x9F, 0x20, 0xCF, 0x8F, 0x20, 0xCF, 0x91, 0x20, 0xD1, 0x92, 0x20, 0xD5, 0x83, 0x20, 0xD8, 0x99, 0x20, 0xD1, 0x9C, 0x20, 0xD2, 0x9A, 0x20, 0xD5, 0xAE, 0x20, 0xD1, 0xBB, 0x20, 0xD9, 0xA7, 0x20, 0xD9, 0x92, 0x20, 0xD3, 0x99, 0x20, 0xD1, 0x98, 0x20, 0xD7, 0xB2, 0x20, 0xD5, 0xAC, 0x20, 0xD4, 0x81, 0x20, 0xD5, 0x9E, 0x20, 0xD1, 0xA7, 0x20, 0xD0, 0x8D, 0x20, 0xD7, 0xA9, 0x20, 0xD4, 0x89, 0x20, 0xD3, 0x89, 0x20, 0xCF, 0xBA, 0x20, 0xD4, 0xA4, 0x20, 0xD0, 0xA4, 0x20, 0xD9, 0xA8, 0x20, 0xD2, 0xB2, 0x20, 0xD2, 0x87, 0x20, 0xD8, 0x98, 0x20, 0xD2, 0xAF, 0x20, 0xD9, 0x8E, 0x20, 0xCF, 0xAD, 0x20, 0xCF, 0x86, 0x20, 0xD9, 0xA5, 0x20, 0xD0, 0x80, 0x20, 0xD6, 0xB0, 0x20, 0xD3, 0x86, 0x20, 0xD0, 0xB1, 0x20, 0xD0, 0x95, 0x20, 0xD9, 0xBA, 0x20, 0xD9, 0x88, 0x20, 0xD6, 0xB7, 0x20, 0xD5, 0x9B, 0x20, 0xD6, 0x98, 0x20, 0xD8, 0xBA, 0x20, 0xD9, 0x93, 0x20, 0xD0, 0xA2, 0x20, 0xD9, 0xB9, 0x20, 0xD2, 0x83, 0x20, 0xD6, 0x95, 0x20, 0xD8, 0xB9, 0x20, 0xD7, 0xA3, 0x20, 0xD3, 0x90, 0x20, 0xD7, 0x96, 0x20, 0xD7, 0x8E, 0x20, 0xD9, 0xAC, 0x20, 0xD2, 0x94, 0x20, 0xD7, 0x96, 0x20, 0xD5, 0xAD, 0x20, 0xCF, 0xAE, 0x20, 0xD7, 0x8E, 0x20, 0xD4, 0x9B, 0x20, 0xD0, 0xBA, 0x20, 0xD3, 0x8E, 0x20, 0xD6, 0x9B, 0x20, 0xD6, 0xB1, 0x20, 0xD4, 0xBB, 0x20, 0xD2, 0x9B, 0x20, 0xD5, 0xA2, 0x20, 0xCF, 0xA5, 0x20, 0xD9, 0xB1, 0x20, 0xD0, 0x92, 0x20, 0xD7, 0x83, 0x20, 0xD9, 0xBD, 0x20, 0xD8, 0x98, 0x20, 0xD0, 0x89, 0x20, 0xD4, 0xA7, 0x20, 0xD0, 0x8C, 0x20, 0xD4, 0x8F, 0x20, 0xD2, 0xA9, 0x20, 0xD3, 0xBE, 0x20, 0xD4, 0x9C, 0x20, 0xD9, 0xB1, 0x20, 0xCF, 0xA3, 0x20, 0xD8, 0x8A, 0x20, 0xD5, 0xA9, 0x20, 0xD4, 0xB7, 0x20, 0xD3, 0xB5, 0x20, 0xD1, 0xB1, 0x20, 0xD3, 0x87, 0x20, 0xD3, 0xB7, 0x20, 0xD8, 0x9E, 0x20, 0xD8, 0xA1, 0x20, 0xCF, 0x9F, 0x20, 0xD0, 0xBA, 0x20, 0xCF, 0xB9, 0x20, 0xD6, 0x88, 0x20, 0xD6, 0x89, 0x20, 0xD7, 0xA4, 0x20, 0xCF, 0x89, 0x20, 0xD6, 0x89, 0x20, 0xD0, 0xBB, 0x20, 0xD5, 0xA5, 0x20, 0xD7, 0x97, 0x20, 0xD4, 0x93, 0x20, 0xD9, 0xBE, 0x20, 0xD4, 0xB6 })]
		public Byte[] Source { get; set; }

		public Stream baseStream;

		public TextStream stream;

		public StreamReader reader;

		[GlobalSetup]
		public void GlobalSetup() {
			baseStream = new MemoryStream(Source);
			stream = new TextStream(baseStream);
			reader = new StreamReader(baseStream);
		}

		[Benchmark]
		public void TextStream() {
			while (stream.ReadChar() >= 0) { }
		}

		[Benchmark]
		public void StreamReader() => reader.ReadToEnd();
	}
}
